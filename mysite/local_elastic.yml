version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  esdata1:
    driver: local
  esdata2:
    driver: local


services:
# -------------- DJANGO -----------------
  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile_local
    depends_on:
      - postgres
    #environment:
    #  - POSTGRES_USER=reliable_carriers
    #  - USE_DOCKER=yes
    env_file:
      #- ./envs/common/django.env
      - ./env
    volumes:
      - .:/app
    ports:
      - 8000:8000
    links:
      - postgres
      - elasticsearch
    networks:
      - database1_network
      - elastic_network

# -------------- Postgres -----------------
  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    # build:
    #   context: .
    #   dockerfile: ./compose/postgres/Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    ports:
      - 5432:5432
    env_file:
        - ./compose/postgres/postgres.env
    networks:
      - database1_network
    # environment:
      # - POSTGRES_USER=gegooadmin
      # - POSTGRES_PASSWORD=$Django10
      # - POSTGRES_PORT=
    #

# -------------- Elastic Search -----------------
  elasticsearch:
    build:
      context: .
      dockerfile: ./compose/elastic/Dockerfile
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic_network


# -------------- Networks -----------------

networks:
  database1_network:
    driver: bridge
  elastic_network:
    driver: bridge
