# Generated by Django 2.0.8 on 2019-09-27 02:00

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('file', models.FileField(help_text='Image must be a .PNG or .JPG', upload_to='photos/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'jpeg'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this item should be treated as active. Unselect this instead of deleting data.')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='last modified time')),
                ('slug', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(help_text='Please describe the details of your project to our design team (500-2500 characters)', max_length=2500, verbose_name='Job Description')),
                ('desired_plants', models.TextField(blank=True, help_text='What types of plants, trees, and shrubs will be required?', max_length=500, null=True, verbose_name='Plants, Trees, and Shrubs')),
                ('hardscaping', models.BooleanField(default=False, verbose_name='Will there be Hardscaping for this project?')),
                ('hardscaping_description', models.TextField(blank=True, help_text='If yes, please describe the required hardscaping required', max_length=500, null=True, verbose_name='If yes, Please describe in detail')),
                ('due_date', models.PositiveSmallIntegerField(choices=[(1, '24 Hours'), (2, '3 Days'), (3, '7 Days')], db_index=True, default=2, verbose_name='Once you place your order, when would you like your service delivered?')),
                ('status', models.CharField(choices=[('IN PROGRESS', 'In Progress'), ('REQUIRES INPUT', 'Requires Input'), ('COMPLETED', 'Completed'), ('AWAITING PAYMENT', 'Awaiting Payment')], db_index=True, default='AWAITING PAYMENT', max_length=16)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.CharField(help_text='what did you think about thisjob?', max_length=255)),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], db_index=True, default=5, verbose_name='Rate this job between 1-5 stars.')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='created time')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('order_id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('success', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_transaction', to='portal.Job')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
